<html>
    <head>
        <title>Li battery chart</title>
<script src="https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.js" type="text/javascript"></script> 
        
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.js"></script>

<script>    //http://www.chartjs.org/samples/latest/utils.js    
'use strict';

window.chartColors = {
	red: 'rgb(255, 99, 132)',
	orange: 'rgb(255, 159, 64)',
	yellow: 'rgb(255, 205, 86)',
	green: 'rgb(75, 192, 192)',
	blue: 'rgb(54, 162, 235)',
	purple: 'rgb(153, 102, 255)',
	grey: 'rgb(201, 203, 207)'
};

(function(global) {
	var Months = [
		'January',
		'February',
		'March',
		'April',
		'May',
		'June',
		'July',
		'August',
		'September',
		'October',
		'November',
		'December'
	];

	var COLORS = [
		'#4dc9f6',
		'#f67019',
		'#f53794',
		'#537bc4',
		'#acc236',
		'#166a8f',
		'#00a950',
		'#58595b',
		'#8549ba'
	];

	var Samples = global.Samples || (global.Samples = {});
	var Color = global.Color;

	Samples.utils = {
		// Adapted from http://indiegamr.com/generate-repeatable-random-numbers-in-js/
		srand: function(seed) {
			this._seed = seed;
		},

		rand: function(min, max) {
			var seed = this._seed;
			min = min === undefined ? 0 : min;
			max = max === undefined ? 1 : max;
			this._seed = (seed * 9301 + 49297) % 233280;
			return min + (this._seed / 233280) * (max - min);
		},

		numbers: function(config) {
			var cfg = config || {};
			var min = cfg.min || 0;
			var max = cfg.max || 1;
			var from = cfg.from || [];
			var count = cfg.count || 8;
			var decimals = cfg.decimals || 8;
			var continuity = cfg.continuity || 1;
			var dfactor = Math.pow(10, decimals) || 0;
			var data = [];
			var i, value;

			for (i = 0; i < count; ++i) {
				value = (from[i] || 0) + this.rand(min, max);
				if (this.rand() <= continuity) {
					data.push(Math.round(dfactor * value) / dfactor);
				} else {
					data.push(null);
				}
			}

			return data;
		},

		labels: function(config) {
			var cfg = config || {};
			var min = cfg.min || 0;
			var max = cfg.max || 100;
			var count = cfg.count || 8;
			var step = (max - min) / count;
			var decimals = cfg.decimals || 8;
			var dfactor = Math.pow(10, decimals) || 0;
			var prefix = cfg.prefix || '';
			var values = [];
			var i;

			for (i = min; i < max; i += step) {
				values.push(prefix + Math.round(dfactor * i) / dfactor);
			}

			return values;
		},

		months: function(config) {
			var cfg = config || {};
			var count = cfg.count || 12;
			var section = cfg.section;
			var values = [];
			var i, value;

			for (i = 0; i < count; ++i) {
				value = Months[Math.ceil(i) % 12];
				values.push(value.substring(0, section));
			}

			return values;
		},

		color: function(index) {
			return COLORS[index % COLORS.length];
		},

		transparentize: function(color, opacity) {
			var alpha = opacity === undefined ? 0.5 : 1 - opacity;
			return Color(color).alpha(alpha).rgbString();
		}
	};

	// DEPRECATED
	window.randomScalingFactor = function() {
		return Math.round(Samples.utils.rand(-100, 100));
	};

	// INITIALIZATION

	Samples.utils.srand(Date.now());

}(this));        
</script>        
        
<style type="text/css">/* Chart.js */
@-webkit-keyframes chartjs-render-animation{from{opacity:0.99}to{opacity:1}}@keyframes chartjs-render-animation{from{opacity:0.99}to{opacity:1}}.chartjs-render-monitor{-webkit-animation:chartjs-render-animation 0.001s;animation:chartjs-render-animation 0.001s;}</style>

	<style>
	canvas{
		-moz-user-select: none;
		-webkit-user-select: none;
		-ms-user-select: none;
	}
	</style>
        
		<script>
        var ar_time = new Array();
        var ar_volt = new Array();    
        var vguid;   
            
		var config = {
			type: 'line',
			data: {
				labels: ['Start'],
				datasets: [{
					label: 'OC Li battery',
					backgroundColor: window.chartColors.red,
					borderColor: window.chartColors.red,
					data: [0],
					fill: false
				}]
			},
			options: {
				responsive: true,
				title: {
					display: true,
					text: 'Bye-Bye Github'
				},
				tooltips: {
					mode: 'index',
					intersect: false,
				},
				hover: {
					mode: 'nearest',
					intersect: true
				},
				scales: {
					xAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'Time'
						}
					}],
					yAxes: [{
						display: true,
						scaleLabel: {
							display: true,
							labelString: 'Volt'
						}
					}]
				}
			}
		};   
            
    		window.onload = function() {
			var ctx = document.getElementById('canvas').getContext('2d');
			window.myLine = new Chart(ctx, config);
		};       
                           
            
            
        function guid() {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);
                return v.toString(16);
            });
        }            
            
        function mqtt_go() {            
            vguid=guid();
            client = new Paho.MQTT.Client("mqtt.ocrobot.com", Number(8083), vguid);
            client.connect({onSuccess:mqtt_connect});
            client.onMessageArrived = receive_message;
        }             

        function mqtt_connect() {  
         console.log("Connected");  
        console.log(vguid);
         sndmsg = new Paho.MQTT.Message(vguid);  
         sndmsg.destinationName = "farewell2github20180611signin";  
         client.send(sndmsg);            
            
         client.subscribe("farewell2github20180611");
        }  
            
        function receive_message(message) {  
              get_data(message.payloadString); 
         }             
            
        function get_data(Astr){
            var v,t;
            var vtime,vlbl;              
            
            document.getElementById("textarea").value+= Astr+"\n";
            
            
            if ((Astr.indexOf("{") != -1)&&(Astr.indexOf("}") != -1)&&(config.data.datasets.length > 0))
            {
                var vrtn = Astr;
                vrtn =vrtn.replace("{","");
                vrtn =vrtn.replace("}","");

                var ar_str = vrtn.split(",");  
                t=ar_str[0];    
                v=ar_str[1];  
                
                  if (t!=0)
                  {                 
                      var s,n,h;
                      s=Math.floor(t / 1000 ); 
                      n=Math.floor(s / 60 ); 
                      h=Math.floor(n / 60);
                      if (h<10){
                        vtime='0'+h;
                      }else{
                        vtime=h;         
                      }
                      n= n % 60;
                      if (n<10){
                        vtime=vtime+':0'+n;  
                      }else{
                        vtime=vtime+':'+n;    
                      }
                      s= s % 60;
                      if (s<10){
                        vtime=vtime+':0'+s;  
                      }else{
                        vtime=vtime+':'+s;    
                      }              

                      var m=v*0.003;     
                      vlbl=m.toFixed(3)+'V '+vtime;  
                  }
                  else
                  {
                      vlbl='N/A';
                  }                
                
				config.data.labels.push(vlbl);
				config.data.datasets.forEach(function(dataset) {dataset.data.push(v);});   
                window.myLine.update();
            }            

        } 
            
        
   
            
            
        function button_gogogo() //btn_go make anything start once 
        {
            document.getElementById("btn_go").disabled = true;
            mqtt_go();
        }             
        </script>              
</head>
    
<body>
	<br>
	<button id="btn_go" onclick="button_gogogo()">GoGoGo</button>    
	<br>    
    
	<div style="width:75%;"><div class="chartjs-size-monitor" style="position: absolute; left: 0px; top: 0px; right: 0px; bottom: 0px; overflow: hidden; pointer-events: none; visibility: hidden; z-index: -1;"><div class="chartjs-size-monitor-expand" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"><div style="position:absolute;width:1000000px;height:1000000px;left:0;top:0"></div></div><div class="chartjs-size-monitor-shrink" style="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;"><div style="position:absolute;width:200%;height:200%;left:0; top:0"></div></div></div>
		<canvas id="canvas" width="1422" height="711" class="chartjs-render-monitor" style="display: block; height: 474px; width: 948px;"></canvas>    
	<br>
    <textarea id="textarea" rows=5 cols=100></textarea>    
          
</body>
</html>    